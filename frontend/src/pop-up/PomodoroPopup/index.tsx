import { Dialog, Transition } from "@headlessui/react";
import React, { Fragment } from "react";
import {
  PomodoroStep1,
  PomodoroStep2,
  PomodoroStep3,
  PomodoroStep4,
  PomodoroStep5,
  PomodoroStep6,
} from "../../assets/svgs";

interface PomodoroPopupProps {
  isOpen: boolean;
  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;
}

const INSTRUCTIONS = [
  {
    image: <PomodoroStep1 />,
    title: "B∆∞·ªõc 1",
    description: "Ch·ªçn vi·ªác c·∫ßn l√†m",
  },
  {
    image: <PomodoroStep2 />,
    title: "B∆∞·ªõc 2",
    description: (
      <div>
        ƒê·∫∑t b√°o th·ª©c trong 25 ph√∫t <div>(1 Pomodoro)</div>
      </div>
    ),
  },
  {
    image: <PomodoroStep3 />,
    title: "B∆∞·ªõc 3",
    description: "T·∫≠p trung l√†m ƒë·∫øn h·∫øt th·ªùi gian",
  },
  {
    image: <PomodoroStep4 />,
    title: "B∆∞·ªõc 4",
    description: "T·∫°m ngh·ªâ t·∫ßm 5 ph√∫t",
  },
  {
    image: <PomodoroStep5 />,
    title: "B∆∞·ªõc 5",
    description: "Quay l·∫°i l√†m vi·ªác",
  },
  {
    image: <PomodoroStep6 />,
    title: "B∆∞·ªõc 6",
    description: "Ngh·ªâ ng∆°i sau 4 l·∫ßn Pomodoro",
  },
];

const PomodoroPopup: React.FC<PomodoroPopupProps> = ({ isOpen, setIsOpen }) => {
  const handleClose = () => {
    setIsOpen(false);
  };

  return (
    <Transition appear show={isOpen} as={Fragment}>
      <Dialog as="div" className="relative z-[1000]" onClose={handleClose}>
        <Transition.Child
          as={Fragment}
          enter="ease-out duration-300"
          enterFrom="opacity-0"
          enterTo="opacity-100"
          leave="ease-in duration-200"
          leaveFrom="opacity-100"
          leaveTo="opacity-0"
        >
          <div className="fixed inset-0 bg-black/25" />
        </Transition.Child>

        <div className="fixed inset-0 overflow-y-auto">
          <div className="flex min-h-full items-center justify-center p-4 text-center">
            <Transition.Child
              as={Fragment}
              enter="ease-out duration-300"
              enterFrom="opacity-0 scale-95"
              enterTo="opacity-100 scale-100"
              leave="ease-in duration-200"
              leaveFrom="opacity-100 scale-100"
              leaveTo="opacity-0 scale-95"
            >
              <Dialog.Panel className="w-full max-w-3xl transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all flex flex-col items-center gap-4">
                <Dialog.Title
                  as="h3"
                  className="text-lg font-medium leading-6 text-gray-900 text-center"
                >
                  <div className="text-4xl font-bold uppercase text-red-500">Pomodoro</div>
                  <div>Ph∆∞∆°ng ph√°p c√† chua</div>
                </Dialog.Title>

                <div className="mt-2">
                  <p className="text-sm text-gray-500 text-center mx-8">
                    Pomodoro l√† m·ªôt ph∆∞∆°ng ph√°p qu·∫£n l√Ω th·ªùi gian ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Francesco
                    Cirillo v√†o nh·ªØng nƒÉm 1980. Ph∆∞∆°ng ph√°p n√†y s·ª≠ d·ª•ng ƒë·ªìng h·ªì b·∫•m gi·ªù ƒë·ªÉ chia c√¥ng
                    vi·ªác th√†nh nh·ªØng ƒëo·∫°n ng·∫Øn, ph√¢n t√°ch b·∫±ng nhau v√† c√≥ th·ªùi gian ng·∫Øn ngh·ªâ gi·ªØa
                    c√°c ƒëo·∫°n.
                  </p>
                </div>

                <div className="grid grid-cols-3 gap-4">
                  {INSTRUCTIONS.map(({ image, title, description }) => (
                    <div className="flex flex-col justify-center items-center text-center">
                      <div className="w-28 mb-4">{image}</div>
                      <div className="font-semibold">{title}</div>
                      <div>{description}</div>
                    </div>
                  ))}
                </div>

                <div className="mt-4">
                  <button
                    type="button"
                    className="inline-flex justify-center rounded-full border border-transparent bg-stone-800 text-stone-100 px-4 py-2 text-sm font-medium"
                    onClick={handleClose}
                  >
                    T√¥i ƒë√£ hi·ªÉu üçÖ
                  </button>
                </div>
              </Dialog.Panel>
            </Transition.Child>
          </div>
        </div>
      </Dialog>
    </Transition>
  );
};

export default PomodoroPopup;
